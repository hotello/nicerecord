{"version":3,"sources":["components/NoteContext.js","constants/Colors.js","constants/Sizes.js","i18n/i18n.js","components/base/Avatar.js","components/base/Button.js","components/base/Text.js","components/base/DateInput/DateInput.web.js","components/base/DateInput/index.js","components/base/Touchable.js","components/base/IconButton.js","components/base/TextInput/TextInput.js","components/base/TextInput/index.js","components/base/TextInputGroup/TextInputGroup.js","components/base/TextInputGroup/index.js","components/PatientList.js","lib/db.web.js","screens/MyPatientsScreen.js","screens/NoteScreen.js","lib/useDebounce.js","components/NoteList.js","screens/PatientScreen.js","screens/ProfileScreen.js","App.js","web-build/register-service-worker.js"],"names":["NoteContext","React","note","patient","setNote","setPatient","NAMED_COLORS","cultured","eerieBlack","majorelleBlue","platinum","silverSand","white","THEME_COLORS","background","border","muted","color","alpha","rgb","string","primary","surface","text","unit","content","UNIT","edge","radius","resources","en","require","i18n","use","initReactI18next","init","lng","interpolation","escapeValue","avatarSizes","small","medium","large","xlarge","bgColors","generateBgStyle","name","i","str","sum","length","charCodeAt","sumChars","backgroundColor","Avatar","onPress","onLongPress","Component","TouchableOpacity","View","source","size","avatarStyle","rounded","title","titleStyle","overlayContainerStyle","imageProps","placeholderStyle","ImageComponent","style","attributes","width","height","titleSize","styles","container","borderRadius","Image","PlaceholderContent","containerStyle","StyleSheet","flatten","overlayContainer","overflow","avatar","fontSize","initials","create","alignItems","justifyContent","flex","Button","this","props","accessibilityLabel","bold","touchSoundDisabled","hasTVPreferredFocus","nextFocusDown","nextFocusForward","nextFocusLeft","nextFocusRight","nextFocusUp","disabled","testID","buttonStyles","button","textStyles","Platform","OS","push","accessibilityState","buttonDisabled","textDisabled","formattedTitle","toUpperCase","Touchable","TouchableNativeFeedback","accessibilityRole","fontWeight","textAlign","margin","Colors","Text","rest","textColor","writingDirection","I18nManager","isRTL","Sizes","flexDirection","paddingHorizontal","paddingVertical","DateInput","ref","editable","label","onChange","value","event","target","type","toISOString","substring","children","icon","pressColor","touchable","Ionicons","disabledUnderlineAndroid","placeholderTextColor","selectionColor","underlineIOS","input","withBorder","paddingLeft","borderBottomWidth","hairlineWidth","borderBottomColor","TextInput","group","borderTopColor","borderTopWidth","marginBottom","TextInputGroup","Item","item","picture","center","format","parseISO","birthDate","ListEmptyComponent","t","useTranslation","empty","PatientList","rawData","patients","sections","Object","values","sort","a","b","keyA","keyB","reduce","r","e","data","SectionList","initialNumToRender","keyExtractor","_id","renderItem","renderSectionHeader","section","header","padding","marginHorizontal","db","PouchDB","MyPatientsScreen","navigation","setPatients","isFocused","useIsFocused","setOptions","headerRight","navigate","edit","findPatients","allDocs","startkey","endkey","include_docs","then","rows","map","doc","catch","console","error","changes","filter","resourceType","_deleted","live","on","cancel","marginRight","generateId","date","subject","reference","formatISO","NoteScreen","headerHeight","useHeaderHeight","externalNote","summary","setSummary","debouncedSummary","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","Date","remove","_rev","put","status","putNote","newRev","rev","KeyboardAvoidingView","behavior","keyboardVerticalOffset","screen","multiline","onChangeText","placeholder","textAlignVertical","NoteList","notes","FlatList","borderColor","borderWidth","PatientScreen","route","setNotes","params","newNote","findNotes","descending","SignupSchema","Yup","shape","max","sub","days","required","email","givenName","familyName","genericIdentifier","phone","ProfileScreen","useFormik","initialValues","telecom","find","system","given","join","homeAddress","address","family","div","identifier","onSubmit","birthDateISO","representation","split","createPatient","id","get","newDoc","validationSchema","handleBlur","handleChange","handleSubmit","isValid","setFieldValue","done","screenContainer","ScrollView","pictureContainer","maxLength","onBlur","keyboardType","numberOfLines","delete","bulkDocs","paddingTop","LeftStack","createStackNavigator","RightStack","NavigationTheme","dark","colors","card","App","useState","setNoteState","Provider","left","NavigationContainer","theme","Navigator","Screen","component","options","cardStyle","right","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.efa228bd.chunk.js","sourcesContent":["import * as React from 'react';\n\nconst NoteContext = React.createContext({\n  note: null,\n  patient: null,\n  setNote: () => {},\n  setPatient: () => {},\n});\n\nexport default NoteContext;\n","import color from 'color';\n\n// Find color palette at:\n// https://coolors.co/1c1c1e-eaeaed-f1f1f6-ffffff-623cea\nconst NAMED_COLORS = {\n  cultured: '#f1f1f6',\n  eerieBlack: '#1c1c1e',\n  majorelleBlue: '#623cea',\n  platinum: '#eaeaed',\n  silverSand: '#c7c7cc',\n  white: '#ffffff',\n};\n\nconst THEME_COLORS = {\n  background: NAMED_COLORS.cultured,\n  border: NAMED_COLORS.platinum,\n  muted: color(NAMED_COLORS.eerieBlack).alpha(0.5).rgb().string(),\n  primary: NAMED_COLORS.majorelleBlue,\n  surface: NAMED_COLORS.white,\n  text: NAMED_COLORS.eerieBlack,\n};\n\nexport default {\n  ...NAMED_COLORS,\n  ...THEME_COLORS,\n};\n","const UNIT = 4;\n\nconst SIZES = {\n  content: UNIT * 4,\n  edge: UNIT * 2,\n  radius: UNIT * 2,\n  text: 16,\n};\n\nexport default {\n  unit: UNIT,\n  ...SIZES,\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nconst resources = {\n  en: require('./en.json'),\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en',\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  Platform,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native';\nimport initials from 'initials';\n\nconst avatarSizes = {\n  small: 36,\n  medium: 54,\n  large: 76,\n  xlarge: 146,\n};\nconst bgColors = [\n  '#623ceaff',\n  '#ff934fff',\n  '#d972ffff',\n  '#8cffdaff',\n  '#1b1f3bff',\n  '#e6c229ff',\n  '#00a5e0ff',\n  '#ce2d4fff',\n  '#9c89b8ff',\n  '#ceec97ff',\n];\n\nconst sumChars = (str) => {\n  let sum = 0;\n  for (let i = 0; i < str.length; i++) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum;\n};\nconst generateBgStyle = (name) => {\n  // Pick a deterministic color from the list\n  const i = sumChars(name) % bgColors.length;\n  const background = bgColors[i];\n\n  return { backgroundColor: background };\n};\n\nconst Avatar = ({\n  onPress,\n  onLongPress,\n  Component = onPress || onLongPress ? TouchableOpacity : View,\n  source,\n  size,\n  avatarStyle,\n  rounded,\n  title,\n  titleStyle,\n  overlayContainerStyle,\n  imageProps,\n  placeholderStyle,\n  ImageComponent,\n  style,\n  ...attributes\n}) => {\n  const width =\n    typeof size === 'number' ? size : avatarSizes[size] || avatarSizes.small;\n  const height = width;\n  const titleSize = width / 2;\n\n  return (\n    <Component\n      onPress={onPress}\n      onLongPress={onLongPress}\n      style={[\n        styles.container,\n        { height, width },\n        rounded && { borderRadius: width / 2 },\n        title && generateBgStyle(title),\n        style,\n      ]}\n      {...attributes}\n    >\n      {source ? (\n        <Image\n          placeholderStyle={placeholderStyle}\n          PlaceholderContent={PlaceholderContent}\n          containerStyle={StyleSheet.flatten([\n            styles.overlayContainer,\n            rounded && { borderRadius: width / 2, overflow: 'hidden' },\n            overlayContainerStyle,\n          ])}\n          source={source}\n          {...imageProps}\n          style={StyleSheet.flatten([\n            styles.avatar,\n            imageProps && imageProps.style,\n            avatarStyle,\n          ])}\n          ImageComponent={ImageComponent}\n        />\n      ) : (\n        title && (\n          <Text\n            style={StyleSheet.flatten([\n              styles.title,\n              { fontSize: titleSize },\n              titleStyle,\n            ])}\n          >\n            {initials(title)}\n          </Text>\n        )\n      )}\n    </Component>\n  );\n};\n\nexport default Avatar;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'gray',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatar: {\n    flex: 1,\n    width: null,\n    height: null,\n  },\n  overlayContainer: {\n    flex: 1,\n  },\n  title: {\n    backgroundColor: 'transparent',\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { Colors } from '../../constants';\n\nexport default class Button extends React.Component {\n  render() {\n    const {\n      accessibilityLabel,\n      bold,\n      color,\n      onPress,\n      touchSoundDisabled,\n      title,\n      hasTVPreferredFocus,\n      nextFocusDown,\n      nextFocusForward,\n      nextFocusLeft,\n      nextFocusRight,\n      nextFocusUp,\n      disabled,\n      testID,\n    } = this.props;\n    const buttonStyles = [styles.button];\n    const textStyles = [styles.text];\n    if (color) {\n      if (Platform.OS === 'ios') {\n        textStyles.push({ color: color });\n      } else {\n        buttonStyles.push({ backgroundColor: color });\n      }\n    }\n    const accessibilityState = {};\n    if (disabled) {\n      buttonStyles.push(styles.buttonDisabled);\n      textStyles.push(styles.textDisabled);\n      accessibilityState.disabled = true;\n    }\n    if (bold) {\n      textStyles.push(styles.bold);\n    }\n    const formattedTitle =\n      Platform.OS === 'android' ? title.toUpperCase() : title;\n    const Touchable =\n      Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n    return (\n      <Touchable\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        accessibilityState={accessibilityState}\n        hasTVPreferredFocus={hasTVPreferredFocus}\n        nextFocusDown={nextFocusDown}\n        nextFocusForward={nextFocusForward}\n        nextFocusLeft={nextFocusLeft}\n        nextFocusRight={nextFocusRight}\n        nextFocusUp={nextFocusUp}\n        testID={testID}\n        disabled={disabled}\n        onPress={onPress}\n        touchSoundDisabled={touchSoundDisabled}\n      >\n        <View style={buttonStyles}>\n          <Text style={textStyles} disabled={disabled}>\n            {formattedTitle}\n          </Text>\n        </View>\n      </Touchable>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  bold: {\n    fontWeight: 'bold',\n  },\n  button: {},\n  text: {\n    textAlign: 'center',\n    margin: 8,\n    color: Colors.primary,\n    fontSize: 18,\n  },\n  buttonDisabled: {},\n  textDisabled: {\n    color: Colors.muted,\n  },\n});\n","import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, Text as RNText } from 'react-native';\n\nimport { Colors, Sizes } from '../../constants';\n\nexport default class Text extends React.Component {\n  render() {\n    const { muted, style, ...rest } = this.props;\n    const textColor = color(Colors.text)\n      .alpha(muted ? 0.5 : 1)\n      .rgb()\n      .string();\n    const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n    return (\n      <RNText\n        {...rest}\n        style={[\n          {\n            color: textColor,\n            fontSize: Sizes.text,\n            textAlign: 'left',\n            writingDirection: writingDirection,\n          },\n          style,\n          this.props.style,\n        ]}\n      />\n    );\n  }\n}\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport Text from '../Text';\nimport { Sizes } from '../../../constants';\n\nexport default function DateInput(\n  { editable, label, onChange = () => {}, value, ...props },\n  ref\n) {\n  const onChangeInternal = (event) => {\n    onChange(event.target.value);\n  };\n  return (\n    <View style={styles.content}>\n      <Text>{label}</Text>\n      <View>\n        <input\n          disabled={!editable}\n          onChange={onChangeInternal}\n          type=\"date\"\n          value={\n            value.toISOString ? value.toISOString().substring(0, 10) : value\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: Sizes.content,\n    paddingVertical: Sizes.unit * 2,\n  },\n});\n","import DateInput from './DateInput';\n\nexport default DateInput;\n","import * as React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n} from 'react-native';\n\nexport default class Touchable extends React.Component {\n  render() {\n    const { children, ...rest } = this.props;\n    const Touchable =\n      Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n\n    return <Touchable {...rest}>{children}</Touchable>;\n  }\n}\n","import { LinearGradient } from 'expo-linear-gradient';\nimport * as React from 'react';\nimport {\n  Button as RNButton,\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport Touchable from './Touchable';\nimport { Colors, Sizes } from '../../constants';\n\nexport default React.forwardRef(function IconButton(\n  {\n    color = Colors.primary,\n    disabled,\n    icon,\n    onPress,\n    pressColor,\n    primary,\n    style,\n    ...rest\n  },\n  ref\n) {\n  return (\n    <Touchable\n      disabled={disabled}\n      onPress={onPress}\n      pressColor={pressColor}\n      style={styles.touchable}\n      ref={ref}\n    >\n      <View\n        style={[\n          styles.container,\n          primary && styles.primary,\n          disabled && styles.disabled,\n          style,\n        ]}\n      >\n        <Ionicons\n          name={`${Platform.OS === 'android' ? 'md' : 'ios'}-${icon}`}\n          size={26}\n          color={disabled ? Colors.muted : primary ? 'white' : color}\n          style={styles.icon}\n        />\n      </View>\n    </Touchable>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: Sizes.unit * 100,\n    overflow: 'hidden',\n    backgroundColor: 'transparent',\n  },\n  disabled: {\n    backgroundColor: 'transparent',\n  },\n  icon: {\n    height: 28,\n    margin: 4,\n    textAlign: 'center',\n    width: 28,\n  },\n  primary: {\n    backgroundColor: Colors.primary,\n  },\n});\n","import * as React from 'react';\nimport { TextInput as RNTextInput, StyleSheet, View } from 'react-native';\n\nimport { Colors, Sizes } from '../../../constants';\n\nexport default React.forwardRef(function TextInput(\n  {\n    // Catch this property to avoid console notices\n    disabledUnderlineAndroid,\n\n    placeholderTextColor = Colors.muted,\n    selectionColor = Colors.primary,\n    style,\n    underlineIOS,\n    ...props\n  },\n  ref\n) {\n  return (\n    <View style={[styles.container, style]}>\n      <RNTextInput\n        {...props}\n        placeholderTextColor={placeholderTextColor}\n        ref={ref}\n        selectionColor={selectionColor}\n        style={[styles.input, underlineIOS ? styles.withBorder : null]}\n      />\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingLeft: Sizes.content,\n  },\n  input: {\n    fontSize: Sizes.text,\n    paddingVertical: Sizes.unit * 3,\n  },\n  withBorder: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: Colors.border,\n  },\n});\n","import TextInput from './TextInput';\n\nexport default TextInput;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { Colors, Sizes } from '../../../constants';\n\nexport default function TextInputGroup({ children, style, ...props }) {\n  return (\n    <View {...props} style={[styles.group, style]}>\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  group: {\n    backgroundColor: Colors.surface,\n    borderBottomColor: Colors.border,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderTopColor: Colors.border,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    marginBottom: Sizes.unit * 4,\n  },\n});\n","import TextInputGroup from './TextInputGroup';\n\nexport default TextInputGroup;\n","import format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SectionList, StyleSheet, View } from 'react-native';\n\nimport { Avatar, Text, Touchable } from './base';\nimport { Sizes } from '../constants';\n\nconst alphabetize = (rawData) => {\n  // Since data at this point is an object, to get array of values\n  // we use Object.values method\n  if (rawData.length < 1) {\n    return [];\n  }\n\n  return Object.values(\n    rawData\n      // Order by provided key all objects in the array\n      .sort(function (a, b) {\n        // Ensure function is not case sensitive\n        const keyA = a.name.text.toUpperCase();\n        const keyB = b.name.text.toUpperCase();\n        // Order by provided key\n        if (keyA < keyB) return -1;\n        if (keyA > keyB) return 1;\n        return 0;\n      })\n      // Group by first letter\n      .reduce((r, e) => {\n        // Get first letter of name of current element\n        let title = e.name.text[0];\n        // If there is no property in accumulator with this letter create it\n        if (!r[title]) r[title] = { title, data: [e] };\n        // If there is push current element to data array for that letter\n        else r[title].data.push(e);\n        // Return accumulator\n        return r;\n      }, {})\n  );\n};\n\nfunction Item({ onPress, item }) {\n  return (\n    <Touchable onPress={() => onPress(item)}>\n      <View style={styles.item}>\n        <Avatar rounded title={item.name.text} style={styles.picture} />\n        <View style={styles.center}>\n          <Text>{item.name.text}</Text>\n          <Text muted>{format(parseISO(item.birthDate), 'PP')}</Text>\n        </View>\n      </View>\n    </Touchable>\n  );\n}\n\nfunction ListEmptyComponent() {\n  const { t } = useTranslation();\n\n  return (\n    <View style={styles.empty}>\n      <Text muted>{t('noPatients')}</Text>\n    </View>\n  );\n}\n\nexport default function PatientList({ onPress, patients }) {\n  const sections = alphabetize(patients);\n\n  return (\n    <SectionList\n      initialNumToRender={20}\n      sections={sections}\n      keyExtractor={(item) => item._id}\n      ListEmptyComponent={ListEmptyComponent}\n      renderItem={({ item }) => <Item onPress={onPress} item={item} />}\n      renderSectionHeader={({ section: { title } }) => (\n        <Text style={styles.header}>{title}</Text>\n      )}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  empty: {\n    alignItems: 'center',\n    padding: Sizes.content,\n    justifyContent: 'center',\n  },\n  header: {\n    fontWeight: 'bold',\n    paddingHorizontal: Sizes.content,\n    paddingVertical: Sizes.unit * 2,\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: Sizes.unit * 2,\n  },\n  picture: {\n    marginHorizontal: Sizes.content,\n  },\n});\n","import PouchDB from 'pouchdb';\n\nconst db = new PouchDB('data');\n\nexport default db;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\n\nimport { IconButton } from '../components/base';\nimport PatientList from '../components/PatientList';\nimport db from '../lib/db';\n\nimport { Sizes } from '../constants';\n\nexport default function MyPatientsScreen({ navigation }) {\n  const [patients, setPatients] = React.useState([]);\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <IconButton\n          icon=\"person-add\"\n          style={styles.icon}\n          onPress={() =>\n            navigation.navigate('Profile', { edit: true, patient: null })\n          }\n        />\n      ),\n    });\n  }, []);\n\n  React.useEffect(() => {\n    const findPatients = () =>\n      db\n        .allDocs({\n          startkey: 'Patient_',\n          endkey: 'Patient_\\uffff',\n          include_docs: true,\n        })\n        .then(({ rows }) => setPatients(rows.map(({ doc }) => doc)))\n        .catch(console.error);\n    const changes = db.changes({\n      filter: (doc) => doc.resourceType === 'Patient' || doc._deleted,\n      live: true,\n    });\n\n    findPatients().then(() => changes.on('change', findPatients));\n\n    return function () {\n      changes.cancel();\n    };\n  }, [isFocused]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <PatientList\n        onPress={(patient) => navigation.navigate('Patient', { patient })}\n        patients={patients}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    marginRight: Sizes.edge,\n  },\n});\n","import format from 'date-fns/format';\nimport formatISO from 'date-fns/formatISO';\nimport * as faker from 'faker';\nimport * as pouchCollate from 'pouchdb-collate';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  TextInput,\n  View,\n} from 'react-native';\nimport { useHeaderHeight } from '@react-navigation/stack';\n\nimport { Colors, Sizes } from '../constants';\nimport { IconButton } from '../components/base';\nimport NoteContext from '../components/NoteContext';\nimport db from '../lib/db';\nimport useDebounce from '../lib/useDebounce';\n\nconst generateId = ({ date, subject }) =>\n  `ClinicalImpression_${subject.reference}_${formatISO(date)}`;\n\nconst putNote = ({ date, summary, subject, ...rest }) => {\n  if (typeof date === 'string') {\n    date = new Date(date);\n  }\n\n  return db.put({\n    ...rest,\n    _id: generateId({ subject, date }),\n    date: formatISO(date),\n    subject: {\n      reference: subject.reference,\n      type: 'Patient',\n    },\n    status: 'in-progress',\n    summary: summary,\n    resourceType: 'ClinicalImpression',\n  });\n};\n\nexport default function NoteScreen({ navigation }) {\n  const { t } = useTranslation();\n  const headerHeight = useHeaderHeight();\n  const { note: externalNote, setNote: setExternalNote } = React.useContext(\n    NoteContext\n  );\n  const [note, setNote] = React.useState({});\n  const [summary, setSummary] = React.useState('');\n  const debouncedSummary = useDebounce(summary, 1000);\n\n  // Replace internal note state when external note changes\n  React.useEffect(() => {\n    if (externalNote) {\n      setNote(externalNote);\n      setSummary(externalNote?.summary || '');\n    } else {\n      setNote({});\n      setSummary('');\n    }\n  }, [externalNote]);\n\n  // Generate a new note _id when no _id is given\n  React.useEffect(() => {\n    if (note.subject && !note._id) {\n      const date = new Date();\n      setNote({\n        ...note,\n        _id: generateId({ date, subject: note.subject }),\n        date: date,\n      });\n    }\n  }, [note._id, note.subject]);\n\n  React.useEffect(() => {\n    const date = note.date ? new Date(note.date) : new Date();\n    navigation.setOptions({\n      headerRight: () => (\n        <IconButton\n          disabled={!note._id || !note.subject}\n          onPress={() =>\n            db\n              .remove(note._id, note._rev)\n              .then(() => {\n                setNote({ subject: note.subject });\n                setSummary('');\n              })\n              .catch(console.error)\n          }\n          icon=\"trash\"\n          style={styles.icon}\n        />\n      ),\n      title: note && note.date ? format(date, 'PP') : t('note'),\n    });\n  }, [note]);\n\n  // Save note when summary changes\n  React.useEffect(() => {\n    if (note._id && note.subject && debouncedSummary.length > 0) {\n      putNote({ ...note, summary: debouncedSummary })\n        .then(({ rev: newRev }) => setNote({ ...note, _rev: newRev }))\n        .catch(console.error);\n    }\n  }, [debouncedSummary]);\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS == 'ios' ? 'padding' : 'height'}\n      keyboardVerticalOffset={headerHeight}\n      style={styles.screen}\n    >\n      <TextInput\n        editable={!!note?.subject}\n        multiline\n        onChangeText={(text) => setSummary(text)}\n        placeholder={t('writeHere')}\n        style={styles.input}\n        textAlignVertical={'top'}\n        value={summary}\n      />\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    marginRight: Sizes.edge,\n  },\n  input: {\n    flex: 1,\n    fontSize: Sizes.text,\n  },\n  screen: {\n    backgroundColor: Colors.surface,\n    flex: 1,\n    padding: Sizes.content,\n  },\n});\n","import * as React from 'react';\n\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n\n  React.useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is\n      // changed ... .. within the delay period. Timeout gets cleared and\n      // restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","import format from 'date-fns/format';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { View, FlatList, StyleSheet } from 'react-native';\nimport Constants from 'expo-constants';\n\nimport { Touchable, Text } from '../components/base';\nimport { Colors, Sizes } from '../constants';\n\nfunction Item({ item, onPress }) {\n  return (\n    <Touchable onPress={() => onPress(item)}>\n      <View style={styles.item}>\n        <Text style={styles.date}>{format(new Date(item.date), 'PP')}</Text>\n        <Text>{item.summary}</Text>\n      </View>\n    </Touchable>\n  );\n}\n\nfunction ListEmptyComponent() {\n  const { t } = useTranslation();\n\n  return (\n    <View style={styles.empty}>\n      <Text muted>{t('noNotes')}</Text>\n    </View>\n  );\n}\n\nexport default function NoteList({ onPress, notes }) {\n  return (\n    <FlatList\n      data={notes}\n      ListEmptyComponent={ListEmptyComponent}\n      renderItem={({ item }) => <Item item={item} onPress={onPress} />}\n      keyExtractor={(item) => item._id}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  date: {\n    fontWeight: 'bold',\n    marginBottom: Sizes.unit * 2,\n  },\n  empty: {\n    alignItems: 'center',\n    padding: Sizes.content,\n    justifyContent: 'center',\n  },\n  item: {\n    backgroundColor: Colors.surface,\n    borderColor: Colors.border,\n    borderRadius: Sizes.radius,\n    borderWidth: 1,\n    margin: Sizes.edge,\n    padding: Sizes.content,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { IconButton } from '../components/base';\nimport NoteContext from '../components/NoteContext';\nimport NoteList from '../components/NoteList';\nimport { Sizes } from '../constants';\nimport db from '../lib/db';\n\nexport default function PatientScreen({ route, navigation }) {\n  const [notes, setNotes] = React.useState([]);\n  const { setNote } = React.useContext(NoteContext);\n  const { patient } = route.params;\n\n  const newNote = () =>\n    setNote({ subject: { reference: patient._id, type: 'Patient' } });\n\n  React.useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <View style={styles.headerRight}>\n          <IconButton\n            icon=\"information-circle-outline\"\n            onPress={() =>\n              navigation.navigate('Profile', { edit: false, patient: patient })\n            }\n            style={styles.icon}\n          />\n          <IconButton\n            icon=\"add\"\n            onPress={() => newNote()}\n            primary\n            style={styles.icon}\n          />\n        </View>\n      ),\n      title: patient.name.text,\n    });\n  }, [patient]);\n\n  React.useEffect(() => {\n    const findNotes = () =>\n      db\n        .allDocs({\n          descending: true,\n          endkey: `ClinicalImpression_${patient._id}_`,\n          include_docs: true,\n          startkey: `ClinicalImpression_${patient._id}_\\uffff`,\n        })\n        .then(({ rows }) => setNotes(rows.map(({ doc }) => doc)))\n        .catch(console.error);\n    const changes = db.changes({\n      filter: (doc) =>\n        doc.resourceType === 'ClinicalImpression' || doc._deleted,\n      live: true,\n    });\n\n    findNotes().then(() => changes.on('change', findNotes));\n\n    return function () {\n      changes.cancel();\n    };\n  }, [patient._id]);\n\n  React.useEffect(() => {\n    newNote();\n\n    return function () {\n      setNote(null);\n    };\n  }, [patient._id]);\n\n  return <NoteList notes={notes} onPress={(note) => setNote(note)} />;\n}\n\nconst styles = StyleSheet.create({\n  headerRight: {\n    flexDirection: 'row',\n  },\n  icon: {\n    marginRight: Sizes.edge,\n  },\n  screen: {\n    flex: 1,\n  },\n});\n","import sub from 'date-fns/sub';\nimport formatISO from 'date-fns/formatISO';\nimport { useFormik } from 'formik';\nimport * as pouchCollate from 'pouchdb-collate';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport * as Yup from 'yup';\nimport { useHeaderHeight } from '@react-navigation/stack';\n\nimport { Colors, Sizes } from '../constants';\nimport {\n  Avatar,\n  Button,\n  DateInput,\n  IconButton,\n  TextInput,\n  TextInputGroup,\n} from '../components/base';\nimport db from '../lib/db';\n\nconst SignupSchema = Yup.object().shape({\n  birthDate: Yup.date()\n    .max(sub(new Date(), { days: 1 }))\n    .required(),\n  email: Yup.string().max(150).email(),\n  givenName: Yup.string().max(50).required(),\n  familyName: Yup.string().max(50).required(),\n  notes: Yup.string().max(10000),\n  genericIdentifier: Yup.string().max(100),\n  phone: Yup.string().max(50),\n});\n\nconst createPatient = ({\n  birthDate,\n  email,\n  familyName,\n  genericIdentifier,\n  givenName,\n  homeAddress,\n  notes,\n  phone,\n  ...rest\n}) => {\n  if (typeof birthDate === 'string') {\n    birthDate = new Date(birthDate);\n  }\n  const birthDateISO = formatISO(birthDate, {\n    representation: 'date',\n  });\n\n  const patient = {\n    ...rest,\n    _id: `Patient_${givenName}_${familyName}_${birthDateISO}`,\n    birthDate: birthDateISO,\n    name: {\n      family: familyName,\n      given: givenName.split(' '),\n      text: `${givenName} ${familyName}`,\n    },\n    resourceType: 'Patient',\n  };\n\n  if (email?.length > 0 || phone?.length > 0) {\n    patient.telecom = [];\n  }\n  if (email?.length > 0) {\n    patient.telecom.push({\n      system: 'email',\n      value: email,\n    });\n  }\n  if (genericIdentifier?.length > 0) {\n    patient.identifier = [\n      {\n        use: 'usual',\n        value: genericIdentifier,\n      },\n    ];\n  }\n  if (homeAddress?.length > 0) {\n    patient.address = [\n      {\n        text: homeAddress,\n        type: 'both',\n        use: 'home',\n      },\n    ];\n  }\n  if (notes?.length > 0) {\n    patient.text = {\n      status: 'additional',\n      div: notes,\n    };\n  }\n  if (phone?.length > 0) {\n    patient.telecom.push({\n      system: 'phone',\n      value: phone,\n    });\n  }\n\n  return db.put(patient);\n};\n\nexport default function ProfileScreen({ route, navigation }) {\n  const { t } = useTranslation();\n  const headerHeight = useHeaderHeight();\n  const edit = route.params?.edit;\n  const patient = route.params?.patient;\n\n  const {\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isValid,\n    setFieldValue,\n    values,\n  } = useFormik({\n    initialValues: {\n      _rev: patient?._rev,\n      birthDate: patient?.birthDate ? new Date(patient.birthDate) : new Date(),\n      email:\n        patient?.telecom?.find(({ system }) => system === 'email')?.value || '',\n      givenName: patient?.name?.given.join(' ') || '',\n      homeAddress:\n        patient?.address?.find(({ use }) => use === 'home')?.text || '',\n      familyName: patient?.name.family || '',\n      notes: patient?.text?.div || '',\n      genericIdentifier:\n        patient?.identifier?.find(({ use }) => use === 'usual')?.value || '',\n      phone:\n        patient?.telecom?.find(({ system }) => system === 'phone')?.value || '',\n    },\n    onSubmit: (values) => {\n      createPatient(values)\n        .then(({ id }) => db.get(id))\n        .then((newDoc) =>\n          navigation.navigate('Profile', {\n            edit: false,\n            patient: newDoc,\n          })\n        )\n        .catch(console.error);\n    },\n    validationSchema: SignupSchema,\n  });\n\n  React.useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <View style={styles.done}>\n          {edit ? (\n            <Button\n              disabled={!isValid}\n              bold\n              onPress={handleSubmit}\n              title={t('save')}\n            />\n          ) : (\n            <Button\n              onPress={() => navigation.navigate('Profile', { edit: true })}\n              title={t('edit')}\n            />\n          )}\n        </View>\n      ),\n      title: edit ? t('profileEdit') : t('profile'),\n    });\n  }, [route.params, isValid]);\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS == 'ios' ? 'padding' : 'height'}\n      keyboardVerticalOffset={headerHeight}\n      style={styles.screenContainer}\n    >\n      <ScrollView style={styles.screen}>\n        <TextInputGroup style={styles.pictureContainer}>\n          <Avatar\n            rounded\n            title={`${values.givenName} ${values.familyName}`}\n            size=\"large\"\n            style={styles.picture}\n          />\n        </TextInputGroup>\n\n        <TextInputGroup>\n          <TextInput\n            editable={edit && !patient?.givenName}\n            maxLength={50}\n            onBlur={handleBlur('givenName')}\n            onChangeText={handleChange('givenName')}\n            placeholder={t('firstName')}\n            underlineIOS\n            value={values.givenName}\n          />\n          <TextInput\n            editable={edit && !patient?.familyName}\n            maxLength={50}\n            onBlur={handleBlur('familyName')}\n            onChangeText={handleChange('familyName')}\n            placeholder={t('lastName')}\n            underlineIOS\n            value={values.familyName}\n          />\n          <DateInput\n            editable={edit && !patient?.birthDate}\n            label={t('birthDate')}\n            onChange={(date) => setFieldValue('birthDate', date)}\n            value={values.birthDate}\n          />\n        </TextInputGroup>\n\n        <TextInputGroup>\n          <TextInput\n            editable={edit}\n            maxLength={100}\n            onBlur={handleBlur('genericIdentifier')}\n            onChangeText={handleChange('genericIdentifier')}\n            placeholder={t('patientId')}\n            underlineIOS\n            value={values.genericIdentifier}\n          />\n          <TextInput\n            editable={edit}\n            maxLength={50}\n            keyboardType=\"phone-pad\"\n            onBlur={handleBlur('phone')}\n            onChangeText={handleChange('phone')}\n            placeholder={t('phoneNumber')}\n            underlineIOS\n            value={values.phone}\n          />\n          <TextInput\n            editable={edit}\n            maxLength={150}\n            keyboardType=\"email-address\"\n            onBlur={handleBlur('email')}\n            onChangeText={handleChange('email')}\n            placeholder={t('email')}\n            underlineIOS\n            value={values.email}\n          />\n          <TextInput\n            editable={edit}\n            maxLength={200}\n            multiline={true}\n            numberOfLines={2}\n            onBlur={handleBlur('homeAddress')}\n            onChangeText={handleChange('homeAddress')}\n            placeholder={t('homeAddress')}\n            textAlignVertical={'top'}\n            value={values.homeAddress}\n          />\n        </TextInputGroup>\n\n        <TextInputGroup>\n          <TextInput\n            editable={edit}\n            maxLength={10000}\n            multiline={true}\n            numberOfLines={10}\n            onBlur={handleBlur('notes')}\n            onChangeText={handleChange('notes')}\n            placeholder={t('notes')}\n            textAlignVertical={'top'}\n            value={values.notes}\n          />\n        </TextInputGroup>\n\n        {edit && patient && (\n          <TextInputGroup style={styles.delete}>\n            <Button\n              title={t('deletePatient')}\n              onPress={() =>\n                db\n                  .allDocs({\n                    endkey: `ClinicalImpression_${patient._id}_\\uffff`,\n                    include_docs: true,\n                    startkey: `ClinicalImpression_${patient._id}_`,\n                  })\n                  .then(({ rows }) =>\n                    db.bulkDocs(\n                      rows.map(({ doc }) => ({ ...doc, _deleted: true }))\n                    )\n                  )\n                  .then(() => db.remove(patient._id, patient._rev))\n                  .then(() => navigation.navigate('MyPatients'))\n                  .catch(console.error)\n              }\n            />\n          </TextInputGroup>\n        )}\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  delete: {\n    alignItems: 'flex-start',\n    paddingHorizontal: Sizes.unit,\n    paddingVertical: Sizes.unit,\n  },\n  done: {\n    marginRight: Sizes.edge,\n  },\n  picture: {\n    borderRadius: 60,\n    height: 120,\n    marginBottom: Sizes.unit * 2,\n    width: 120,\n  },\n  pictureContainer: {\n    alignItems: 'center',\n    paddingVertical: Sizes.content,\n  },\n  screen: {\n    paddingTop: Sizes.content,\n  },\n  screenContainer: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dimensions, StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport NoteContext from './components/NoteContext';\nimport { Colors } from './constants';\nimport i18n from './i18n';\nimport MyPatientsScreen from './screens/MyPatientsScreen';\nimport NoteScreen from './screens/NoteScreen';\nimport PatientScreen from './screens/PatientScreen';\nimport ProfileScreen from './screens/ProfileScreen';\n\nconst LeftStack = createStackNavigator();\nconst RightStack = createStackNavigator();\n\nconst NavigationTheme = {\n  dark: false,\n  colors: {\n    primary: Colors.primary,\n    background: Colors.background,\n    card: Colors.surface,\n    text: Colors.text,\n    border: Colors.border,\n  },\n};\n\nexport default function App() {\n  const [note, setNoteState] = React.useState(null);\n  const { t } = useTranslation();\n\n  const setNote = (note) => setNoteState(note);\n\n  return (\n    <NoteContext.Provider value={{ note, setNote }}>\n      <View style={styles.container}>\n        <View style={styles.left}>\n          <NavigationContainer theme={NavigationTheme}>\n            <LeftStack.Navigator>\n              <LeftStack.Screen\n                name=\"MyPatients\"\n                component={MyPatientsScreen}\n                options={{\n                  title: t('myPatients'),\n                  cardStyle: { backgroundColor: Colors.surface },\n                }}\n              />\n              <LeftStack.Screen\n                name=\"Patient\"\n                component={PatientScreen}\n                options={{ title: t('patient') }}\n              />\n              <LeftStack.Screen\n                name=\"Profile\"\n                component={ProfileScreen}\n                options={{ title: t('profile') }}\n              />\n            </LeftStack.Navigator>\n          </NavigationContainer>\n        </View>\n\n        <View style={styles.right}>\n          <NavigationContainer theme={NavigationTheme}>\n            <RightStack.Navigator>\n              <RightStack.Screen\n                name=\"Note\"\n                component={NoteScreen}\n                options={{ title: t('note') }}\n              />\n            </RightStack.Navigator>\n          </NavigationContainer>\n        </View>\n      </View>\n    </NoteContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  left: {\n    flex: 1 / 3,\n    borderColor: Colors.border,\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n  right: {\n    flex: 2 / 3,\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}